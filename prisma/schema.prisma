generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id        Int    @id @default(autoincrement())
  public_id String @unique @default(uuid())

  role     RolesAuth @default(USER)
  email    String    @unique
  password String?

  is_verified_account           Boolean @default(false)
  newsletter_subscription       Boolean @default(true)
  terms_and_conditions_accepted Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  verification_code     VerificationCodes?
  singlePurchases       UserSinglePurchases[]
  subscriptionPurchases UserSubscriptionPurchases[]
}

model UserSinglePurchases {
  authId Int
  Auth   Auth @relation(fields: [authId], references: [id], onDelete: Cascade)

  singlePurchaseProductsId Int
  SinglePurchaseProducts   SinglePurchaseProducts @relation(fields: [singlePurchaseProductsId], references: [id], onDelete: Cascade)

  @@id([authId, singlePurchaseProductsId])
}

model UserSubscriptionPurchases {
  status StatusSubscriptionPurchaseProducts

  authId Int
  Auth   Auth @relation(fields: [authId], references: [id], onDelete: Cascade)

  subscriptionPurchaseProductsId Int
  SubscriptionPurchaseProducts   SubscriptionPurchaseProducts @relation(fields: [subscriptionPurchaseProductsId], references: [id], onDelete: Cascade)

  @@id([authId, subscriptionPurchaseProductsId])
}

model SinglePurchaseProducts {
  id        Int    @id @default(autoincrement())
  public_id String @unique @default(uuid())

  name        String
  description String

  price    Int
  price_id String? @unique

  slug  String   @unique
  image String[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  purchases UserSinglePurchases[]
}

model SubscriptionPurchaseProducts {
  id        Int    @id @default(autoincrement())
  public_id String @unique @default(uuid())

  name        String
  description String

  price    Int
  price_id String? @unique

  slug  String   @unique
  image String[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  subscriptionPurchases UserSubscriptionPurchases[]
}

model VerificationCodes {
  id        Int    @id @default(autoincrement())
  public_id String @unique @default(uuid())

  code String

  created_at DateTime @default(now())
  expires_at DateTime

  auth_id Int @unique

  auth Auth @relation(fields: [auth_id], references: [id], onDelete: Cascade)
}

enum RolesAuth {
  ADMIN
  USER
}

enum StatusSubscriptionPurchaseProducts {
  ACTIVE
  EXPIRE
  CANCELED
}
